import os
import shutil

# Function to sort files based on their type
def sort_files(path):
    try:
        # Get the list of all files in the directory
        file_list = os.listdir(path)
        if not file_list:
            raise FileNotFoundError("No files found in the directory.")
        
        # Extract the file types (extensions) from the file names
        file_types = [file.split('.')[-1] for file in file_list]

        # Create a set of unique file types (removes duplicates)
        unique_file_types = set(file_types)

        # Remove 'ini' file type if it exists in the set (system-related files)
        if 'ini' in unique_file_types:
            unique_file_types.discard('ini')

        print("Unique file types identified:", unique_file_types)

        # Create folders for each file type if they don't already exist
        for file_type in unique_file_types:
            folder_path = os.path.join(path, file_type)
            if not os.path.exists(folder_path):
                os.makedirs(folder_path)
                print(f"Created folder for file type: {file_type}")

        # Move files into their respective folders based on their type
        print("Started to move the files")
        for file in os.listdir(path):
            file_path = os.path.join(path, file)  # Get the full path of the file

            # Check if it's a file (not a directory)
            if os.path.isfile(file_path):
                file_type = os.path.splitext(file)[1].lstrip('.')  # Extract the file extension
                destination_folder = os.path.join(path, file_type)  # Determine the destination folder

                # Move the file to the respective folder
                shutil.move(file_path, destination_folder)
        print("Moving completed")
        print("File sorting completed successfully!")
        
    except FileNotFoundError as e:
        print(f"Error: {e}")
    except PermissionError:
        print("Error: You do not have the required permissions to move these files.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

# Function to undo file sorting (move files back to the original location)
def undo_sort(path):
    try:
        # Loop through all items in the directory
        for item in os.listdir(path):
            item_path = os.path.join(path, item)

            # Check if it's a folder
            if os.path.isdir(item_path):
                # Move all files from the folder back to the main directory
                for file in os.listdir(item_path):
                    file_path = os.path.join(item_path, file)
                    if os.path.isfile(file_path):
                        shutil.move(file_path, path)
                
                # Remove the now-empty folder
                os.rmdir(item_path)

        print("Files have been moved back to the original location.")
    
    except PermissionError:
        print("Error: You do not have the required permissions to undo the operation.")
    except Exception as e:
        print(f"An unexpected error occurred during the undo process: {e}")

# Get the user's choice for sorting or undoing
def user_choice():
    try:
        choice = input("Do you want to (1) Sort files or (2) Undo sorting? Enter 1 or 2: ")
        
        # Validate the user's choice
        if choice == '1':
            path = input("Enter the path to the directory to sort files: ")
            sort_files(path)  # Call the sorting function
        elif choice == '2':
            path = input("Enter the path to the directory to undo sorting: ")
            undo_sort(path)  # Call the undo function
        else:
            print("Invalid choice. Please enter 1 or 2.")
            user_choice()  # Prompt the user again
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

# Run the program
user_choice()
